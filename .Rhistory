# You can do this, but it is tedious
hg_ols <- lm( DemVoteShare2 ~ Turnout + Yr52 + Yr56 + Yr60 + Yr64 + Yr68 +
Yr72 + Yr76 + Yr80 + Yr84 + Yr88 + Yr92 + Yr96 + Yr2000,  data = HGdata)
coeftest(hg_ols, vcov = vcovHC, type = "HC1")
# By using "factor(Year)" as an explanatory variable, the regression automatically incorporates the dummies for each value.
hg_ols <- lm( DemVoteShare2 ~ Turnout + factor(Year)   ,  data = HGdata)
# Iv regression
hg_ivreg <- ivreg( DemVoteShare2 ~ Turnout + factor(Year) |
factor(Year) + DnormPrcp_KRIG, data = Cigdata)
# Iv regression
hg_ivreg <- ivreg( DemVoteShare2 ~ Turnout + factor(Year) |
factor(Year) + DnormPrcp_KRIG, data = HGdata)
# Iv regression
hg_ivreg <- ivreg( DemVoteShare2 ~ Turnout + factor(Year) |
factor(Year) + DNormPrcp_KRIG, data = HGdata)
coeftest(hg_ivreg, vcov = vcovHC, type = "HC1")
# Robust standard errors
rob_se <- list(sqrt(diag(vcovHC(hg_ols, type = "HC1"))),
sqrt(diag(vcovHC(hg_ivreg, type = "HC1"))))
# Show result
stargazer(hg_ols, hg_ivreg, type ="text", se = rob_se)
# First stage regression
hg_1st <- lm(log(rprice) ~ log(rincome) + log(rincome) + salestax + cigtax , data= Cigdata)
# F test
linearHypothesis(hg_ivreg,
c("salestax = 0", "cigtax = 0" ),
vcov = vcovHC, type = "HC1")
# First stage regression
hg_1st <- lm(Turnout ~  factor(Year) + DNormPrcp_KRIG, data= Cigdata)
# First stage regression
hg_1st <- lm(Turnout ~  factor(Year) + DNormPrcp_KRIG, data= HGdata)
# F test
linearHypothesis(hg_1st,
c("salestax = 0" ),
vcov = vcovHC, type = "HC1")
# F test
linearHypothesis(hg_1st,
c("DNormPrcp_KRIG = 0" ),
vcov = vcovHC, type = "HC1")
# You can do this, but it is tedious.
hg_ols <- lm( DemVoteShare2 ~ Turnout + Yr52 + Yr56 + Yr60 + Yr64 + Yr68 +
Yr72 + Yr76 + Yr80 + Yr84 + Yr88 + Yr92 + Yr96 + Yr2000,  data = HGdata)
coeftest(hg_ols, vcov = vcovHC, type = "HC1")
# By using "factor(Year)" as an explanatory variable, the regression automatically incorporates the dummies for each value.
hg_ols <- lm( DemVoteShare2 ~ Turnout + factor(Year)   ,  data = HGdata)
coeftest(hg_ols, vcov = vcovHC, type = "HC1")
# Iv regression
hg_ivreg <- ivreg( DemVoteShare2 ~ Turnout + factor(Year) |
factor(Year) + DNormPrcp_KRIG, data = HGdata)
coeftest(hg_ivreg, vcov = vcovHC, type = "HC1")
# Robust standard errors
rob_se <- list(sqrt(diag(vcovHC(hg_ols, type = "HC1"))),
sqrt(diag(vcovHC(hg_ivreg, type = "HC1"))))
# Show result
stargazer(hg_ols, hg_ivreg, type ="text", se = rob_se)
# First stage regression
hg_1st <- lm(Turnout ~  factor(Year) + DNormPrcp_KRIG, data= HGdata)
# F test
linearHypothesis(hg_1st,
c("DNormPrcp_KRIG = 0" ),
vcov = vcovHC, type = "HC1")
library("MASS")
library("dplyr")
library("AER")
N = 500
Mu = c(1,2)
Sigma12 = matrix( c(1, 0.9, 0.9, 1), nrow = 2, ncol = 2)
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
rho = 0.2
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
y = 1 + 2*x + error
cor(x,z)
rho = 0.1
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
corr(x, z)
cor(x, z)
x <- rho*z + 0.5*error
cor(x, z)
rho = 0.05
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cor(x, z)
rho = 0.05
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
rho = 0.5
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
rho = 0.5
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 2)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + 0.5*error
cov(x, z)
Var(x)
var(c)
var(x)
var(z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
corr(x,z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
N = 2000
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
N = 500
Mu = c(1,2)
Sigma12 = matrix( c(1, 0.9, 0.9, 1), nrow = 2, ncol = 2)
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
for (i in 1:1000){
rho = 0.5
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
y = 1 + 2*x + error
data <- data.frame(  x = x,
y = y,
z = z)
result <- lm( y ~ x, data = data)
result_vec1[i] <- result$coefficients[2]
result <- ivreg( y ~ x | z, data = data)
result_vec2[i] <- result$coefficients[2]
}
summary(result_vec1)
summary(result_vec2)
result_data <- data.frame(  B_OLS = result_vec1,
B_IV = result_vec2 )
data_for_plot <- melt(data = result_data, variable.name = "Variable" )
library("reshape")
library("ggplot2")
result_data <- data.frame(  B_OLS = result_vec1,
B_IV = result_vec2 )
data_for_plot <- melt(data = result_data, variable.name = "Variable" )
fig <-
ggplot(data = data_for_plot) +
xlab("Sample mean") +
geom_line(aes(x = value, colour = variable ),   stat = "density" )
plot(fig)
N = 500
Mu = c(1,2)
Sigma12 = matrix( c(1, 0.9, 0.9, 1), nrow = 2, ncol = 2)
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
for (i in 1:1000){
rho = 0.1
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
y = 1 + 2*x + error
data <- data.frame(  x = x,
y = y,
z = z)
result <- lm( y ~ x, data = data)
result_vec1[i] <- result$coefficients[2]
result <- ivreg( y ~ x | z, data = data)
result_vec2[i] <- result$coefficients[2]
}
summary(result_vec1)
summary(result_vec2)
result_data <- data.frame(  B_OLS = result_vec1,
B_IV = result_vec2 )
data_for_plot <- melt(data = result_data, variable.name = "Variable" )
fig <-
ggplot(data = data_for_plot) +
xlab("Sample mean") +
geom_line(aes(x = value, colour = variable ),   stat = "density" )
plot(fig)
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
for (i in 1:1000){
rho = 0.2
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
y = 1 + 2*x + error
data <- data.frame(  x = x,
y = y,
z = z)
result <- lm( y ~ x, data = data)
result_vec1[i] <- result$coefficients[2]
result <- ivreg( y ~ x | z, data = data)
result_vec2[i] <- result$coefficients[2]
}
summary(result_vec1)
summary(result_vec2)
library("reshape")
library("ggplot2")
result_data <- data.frame(  B_OLS = result_vec1,
B_IV = result_vec2 )
data_for_plot <- melt(data = result_data, variable.name = "Variable" )
fig <-
ggplot(data = data_for_plot) +
xlab("Sample mean") +
geom_line(aes(x = value, colour = variable ),   stat = "density" )
plot(fig)
result
result$model
sqrt(diag(vcovHC(cig_ols, type = "HC1")))
sqrt(diag(vcovHC(result, type = "HC1")))
result_vec1[i] <- result$coefficients[2]/robse[2]
for (i in 1:1000){
rho = 0.2
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
y = 1 + 2*x + error
data <- data.frame(  x = x,
y = y,
z = z)
result <- lm( y ~ x, data = data)
result_vec1[i] <- result$coefficients[2]
robse <- sqrt(diag(vcovHC(result, type = "HC1")))
result_vec1[i] <- result$coefficients[2]/robse[2]
result <- ivreg( y ~ x | z, data = data)
result_vec2[i] <- result$coefficients[2]
robse <- sqrt(diag(vcovHC(result, type = "HC1")))
result_vec2[i] <- result$coefficients[2]/robse[2]
}
summary(result_vec1)
summary(result_vec2)
result
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
for (i in 1:1000){
rho = 0.2
error <- rnorm(N, mean = 0, sd = 1)
z <- rnorm(N, mean = 1, sd = 1)
x <- rho*z + sqrt(1-rho^2)*error
cov(x, z)
cor(x,z)
y = 1 + 2*x + error
data <- data.frame(  x = x,
y = y,
z = z)
result <- lm( y ~ x, data = data)
result_vec1[i] <- result$coefficients[2]
robse <- sqrt(diag(vcovHC(result, type = "HC1")))
result_vec1[i] <- result$coefficients[2]/robse[2]
result <- ivreg( y ~ x | z, data = data)
result_vec2[i] <- result$coefficients[2]
robse <- sqrt(diag(vcovHC(result, type = "HC1")))
result_vec2[i] <- result$coefficients[2]/robse[2]
}
summary(result_vec1)
summary(result_vec2)
robse
result$coefficients
data <- data.frame(  y = y,
xobs1 = xobs1,
xobs1 = xobs1 )
N = 500
result_vec1 = numeric(1000)
result_vec2 = numeric(1000)
for (i in 1:1000){
error <- rnorm(N, mean = 0, sd = 1)
xtrue <- rnorm(N, mean = 1, sd = 2)
xobs1 <- xtrue + rnorm(N, mean = 0, sd = 1)
xobs2 <- xtrue + rnorm(N, mean = 0, sd = 1.5)
y = 1 + 2*xtrue + error
data <- data.frame(  y = y,
xobs1 = xobs1,
xobs2 = xobs2 )
result <- lm( y ~ xobs1, data = data)
result_vec1[i] <- result$coefficients[2]
result <- ivreg( y ~ xobs1 | xobs2, data = data)
result_vec2[i] <- result$coefficients[2]
}
summary(result_vec1)
summary(result_vec2)
library("reshape")
library("ggplot2")
result_data <- data.frame(  B_OLS = result_vec1,
B_IV = result_vec2 )
data_for_plot <- melt(data = result_data, variable.name = "Variable" )
fig <-
ggplot(data = data_for_plot) +
xlab("Sample mean") +
geom_line(aes(x = value, colour = variable ),   stat = "density" )
plot(fig)
library(readr)
RyanData <- read_csv("cementDec2009.csv")
stargazer::stargazer(RyanData)
stargazer::stargazer(RyanData, type = "text")
stargazer::stargazer(as.data.frame(RyanData), type = "text")
RyanData %>%
select(year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
RyanData %>%
select(year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
RyanData %>%
select(year) -> RyanData
RyanData %>%
dplyr::select(year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
library(readr)
library(dplyr)
library(stargazer)
RyanData <- readr::read_csv("cementDec2009.csv")
RyanData %>%
dplyr::select(year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
stargazer::stargazer(as.data.frame(RyanData), type = "text")
RyanData <- readr::read_csv("cementDec2009.csv")
RyanData %>%
dplyr::select(year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
stargazer::stargazer(as.data.frame(RyanData), type = "text")
RyanData <- readr::read_csv("cementDec2009.csv")
names(RyanData)
RyanData %>%
dplyr::select(region, year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
stargazer::stargazer(as.data.frame(RyanData), type = "text")
RyanData <- readr::read_csv("cementDec2009.csv")
RyanData %>%
dplyr::select(region, year, shipped, price, wage96, coal96, elec96, population, gas96) -> RyanData
stargazer::stargazer(as.data.frame(RyanData), type = "text")
RyanData$region
unique(RyanData$region)
length(unique(RyanData$region))
library(AER)
data(Fatalities)
Fatalities
str(Fatalities
library(AER)
library(AER)
data(Fatalities)
str(Fatalities)
plot(x = Fatalities$beertax,
y = Fatalities$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
ylim = c(0, 4.5),
pch = 20,
col = "steelblue")
library("dplyr")
Fatalities %>%
filter(year == 1998) -> data
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
ylim = c(0, 4.5),
pch = 20,
col = "steelblue")
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
col = "steelblue")
data
Fatalities %>%
filter(year == "1998") -> data
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
col = "steelblue")
data
str(Fatalities)
Fatalities %>%
filter(year == "1988") -> data
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
col = "steelblue")
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
ylim = c(0, 4.5),
col = "steelblue")
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
col = "steelblue")
Fatalities %>%
mutate(fatal_rate = fata / pop * 10000) %>%
filter(year == "1988") -> data
Fatalities %>%
mutate(fatal_rate = fatal / pop * 10000) %>%
filter(year == "1988") -> data
plot(x = data$beertax,
y = data$fatal_rate,
xlab = "Beer tax (in 1988 dollars)",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes in 1988",
pch = 20,
col = "steelblue")
library("lfe")
Fatalities %>%
mutate(fatal_rate = fatal / pop * 10000) -> data
felm( fatal_rate ~ beertax | | state, data = data )
felm( fatal_rate ~ beertax | 0 | state, data = data )
help(felm)
felm( fatal_rate ~ beertax  | state, data = data )
summary(result)
result <- felm( fatal_rate ~ beertax  | state, data = data )
summary(result)
result <- felm( fatal_rate ~ beertax  | state | 0 | state, data = data )
summary(result)
result <- felm( fatal_rate ~ beertax  | state + year | 0 | state, data = data )
summary(result)
library("lfe")
Fatalities %>%
mutate(fatal_rate = fatal / pop * 10000) -> data
# OLS
result <- felm( fatal_rate ~ beertax  | state + year | 0 | state, data = data )
summary(result)
# State FE
# State and Year FE
summary(result)
summary(result, robust = TRUE)
summary(result, robust = FALSE)
summary(result)
# OLS
result <- felm( fatal_rate ~ beertax  | state + year | 0 | 0, data = data )
summary(result)
summary(result, robust = TRUE)
# OLS
result_ols <- felm( fatal_rate ~ beertax  | 0 | 0 | 0, data = data )
summary(result, robust = TRUE)
result <- felm( fatal_rate ~ beertax  | state + year | 0 | 0, data = data )
# OLS
result_ols <- felm( fatal_rate ~ beertax  | 0 | 0 | 0, data = data )
summary(result_ols, robust = TRUE)
# State FE
result <- felm( fatal_rate ~ beertax  | state | 0 | 0, data = data )
summary(result, robust = TRUE)
# State FE
result <- felm( fatal_rate ~ beertax  | state | 0 | state, data = data )
summary(result, robust = TRUE)
