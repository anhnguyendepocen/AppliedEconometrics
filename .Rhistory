summary(cars)
summary(cars)
unlink('01_Introduction_cache', recursive = TRUE)
x = c(1, 3, 5, 7, 8, 9)
x
solve(X)
Z = matrix(c(9, 2, -3, 2, 4, -2, -3, -2, 16), 3, byrow = TRUE)
Z
Z = matrix(c(9, 2, -3, 2, 4, -2, -3, -2, 16), 3, byrow = TRUE)
Z
solve(Z)
X <- c(1, 2, 3)
X
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
Y
Y <- c(1,2,3)
print(Y)
print(Y)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
print("Hello world !! ")
Y
Y
Y
Y <- c(4,5,3)
Y
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
y
Y
Y <- c(4,15,5)
Y
print("Hello world !! ")
log(exp(1))
100 + 200 -300
log(0)
log(-1)
?log
?lm
1+2
"1" + 2
c(1, 3, 5, 7, 8, 9)
c(1, 3, 5, 7, 8, 9)
x = c(1, 3, 5, 7, 8, 9)
x
x <- c(1, 3, 5, 7, 8, 9)
x
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
(y = 1:100)
y = 1:100
(y = 1:100)
seq(from = 1.5, to = 4.2, by = 0.1)
seq(1.5, 4.2, 0.1)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/samplecode.R')
rep("A", times = 10)
rep(100, times = 10)
x
rep(x, times = 5)
c(x, rep(seq(1, 9, 2), 3), c(1, 2, 3), 42, 2:4)
length(x)
length(y)
y
length(y)
length(y)
length(x)
length(y)
x
x[1]
x[3]
x[-2]
x[1:3]
x[c(1,3,4)]
z = c(TRUE, TRUE, FALSE, TRUE, TRUE, FALSE)
z
x[z]
print("Hello World !!")
print("Hello World !!")
print("Hello World !!")
3 + 2
3 - 2
3 * 2
3 / 2
3 ^ 2
2 ^ (-3)
100 ^ (1 / 2)
sqrt(100)
exp(1)
log( exp(1) )
?sqrt()
?sqrt
?log
2 + 2
"2" + 2
c(1, 3, 5, 7, 8, 9)
x = c(1, 3, 5, 7, 8, 9)
x
# The following does the same thing.
x <- c(1, 3, 5, 7, 8, 9)
x
# The following does the same thing.
The following does the same thing.
y = 1:100
y
seq(from = 1.5, to = 4.2, by = 0.1)
seq(1.5, 4.2, 0.1)
x
rep(x, times = 3)
c(x, rep(seq(1, 9, 2), 3), c(1, 2, 3), 42, 2:4)
length(x)
length(y)
test_sample = rnorm(n = 10, mean = 2, sd = 5)
test_sample = rnorm(n = 10, mean = 2, sd = 5)
fa = mean(test_sample)
fa
result <- numeric(10)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
result
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
result
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
samplesize_vec <- seq(100, 10000, 100)
samplesize_vec
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
library(ggplot2)
ggplot::qplot(samplesize_vec, result)
ggplot2::qplot(samplesize_vec, result)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
ggplot2::qplot(samplesize_vec, result)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R')
library(ggplot2)
ggplot2::qplot(samplesize_vec, result)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R', echo=TRUE)
ggplot2::qplot(samplesize_vec, result2)
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R', echo=TRUE)
ggplot2::qplot(samplesize_vec, result1)
ggplot2::qplot(samplesize_vec, result2)
ggplot2::qplot(samplesize_vec, result2, geom="line")
source('C:/Users/Yuta/Dropbox/Teaching/2019S_Applied_Econometrics_JPN_ENG/Material_Github/do not share.R', echo=TRUE)
test_sample = rnorm(n = 10, mean = 2, sd = 5)
samplesize_vec <- seq(100,100000, 100)
result1 <- numeric(length(samplesize_vec))
result2 <- numeric(length(samplesize_vec))
for (i in 1:length(samplesize_vec)){
test_sample = rnorm(n = samplesize_vec[i], mean = 2, sd = 5)
result1[i] = mean(test_sample)
result2[i] = sd(test_sample)
}
library(ggplot2)
ggplot2::qplot(samplesize_vec, result1)
ggplot2::qplot(samplesize_vec, result2, geom="line")
profvis::profvis({test_sample = rnorm(n = 10, mean = 2, sd = 5)
samplesize_vec <- seq(100,100000, 100)
result1 <- numeric(length(samplesize_vec))
result2 <- numeric(length(samplesize_vec))
for (i in 1:length(samplesize_vec)){
test_sample = rnorm(n = samplesize_vec[i], mean = 2, sd = 5)
result1[i] = mean(test_sample)
result2[i] = sd(test_sample)
}
library(ggplot2)
ggplot2::qplot(samplesize_vec, result1)
ggplot2::qplot(samplesize_vec, result2, geom="line")})
ggplot2::qplot(samplesize_vec, result1, geom="line")
mpg
install.packages("redr")
install.packages("readr")
getwd("")
getwd()
setwd(dir = )
rm(list = ls())
mpg
mpg
3 < 42
3 > 42
3 == 42
3 == 3
x = 3
y = 3
x == y
(3 > 42) | (x == y)
# AND
(3 > 42) & (x == y)
# Vectoralization
x = c(1, 3, 5, 7, 8, 9)
x > 3
x != 3
x == 5
x == 10
x[x > 3]
# Subsetting
x[x > 3]
x[1]
x[1]
x[c(TRUE, FALSE, FALSE, TRUE, FALSE, TRUE)]
x = 1:9
X = matrix(x, nrow = 3, ncol = 3)
X
Y = matrix(x, nrow = 3, ncol = 3,
byrow = TRUE)
Y
Z = matrix(0, 2, 4)
Z
Z1 = matric(1, 4, 2)
Z1 = matrix(1, 4, 2)
Z1
# Subsetting
X
X[1,2]
X[1, ]
X[ ,3]
# rbind
x = 1:9
y = rep(1, 9)
x
y
XX = rbind(x, y)
XX
str(XX)
YY = cbind(x, y)
YY
x = 1:9
y = 9:1
X = matrix(x, 3, 3)
Y = matrix(y, 3, 3)
X
Y
# Add
X + Y
# Subtract
X - Y
# Multiplication (element-by-element)
X * Y
# Division (element-by-element)
X / y
# Division (element-by-element)
X / Y
# Matrix multiplication
X %*% Y
X * Y
# Transpose
t(X)
X
# Transpose
t(X)
# Inverse matrix
Z = matrix(c(9, 2, -3, 2, 4, -2, -3, -2, 16), 3, byrow = TRUE)
Z
solve(Z)
Z %*% solve(Z)
x = 10
y = 5
if (x > y) {
z = x * y
print("x is larger than y")
} else {
z = x + 5 * y
print("x is less than or equal to y")
}
z
x = 1
y = 10
if (x > y) {
z = x * y
print("x is larger than y")
} else {
z = x + 5 * y
print("x is less than or equal to y")
}
z
x = 10
y = 10
if (x > y) {
z = x * y
print("x is larger than y")
} else if (x == y){
z = 1000
print("x is the same as y")
} else {
z = x + 5 * y
print("x is less than or equal to y")
}
z
x = 1
y = 10
if (x > y) {
z = x * y
print("x is larger than y")
} else if (x == y){z
z = 1000
print("x is the same as y")
} else {
z = x + 5 * y
print("x is less than or equal to y")
}
# For loop
x = 11:15
x
for (i in 1:5) {
x[i] = x[i] * 2
}
for (i in 1:5) {
x[i] = x[i] * 2
}
for (i in 1:5) {
x[i] = x[i] * 2
}
# For loop
x = 11:15
for (i in 1:5) {
x[i] = x[i] * 2
}
x
x = 11:15
x = 2*x
# loop
x = seq(1,1000000, 1)
length(x)
x
tt = proc.time()
for (i in 1:1000000){
x[i] = x[i] * 2
}
proc.time() - tt
# loop
x = seq(1,10000000, 1)
tt = proc.time()
for (i in 1:10000000){
x[i] = x[i] * 2
}
proc.time() - tt
t2 = proc.time()
x = seq(1,10000000, 1)
x = 2*x
proc.time() - t2
standardize = function(x) {
m = mean(x)
std = sd(x)
result = (x - m) / std
return(result)
}
x
x = rnorm(20, mean = 1, sd = 3)
x
standardize(x)
standardize = function(x) {
m = mean(x)
std = sd(x)
result = (x - m) / std
return(result)
}
x2 = x / 10
standardize(x2)
samplesize_vec <- seq(100,100000, 100)
samplesize_vec
seq
?seq
source('C:/Users/Yuta/Dropbox/Problem_Set_1.R', echo=TRUE)
stat
set.seed(1234)
for(i in 1:length(samplesize_vec)){
rand_data = rnorm(n = samplesize_vec[i], mean = 3, sd = 5)
mean_traj[i] = fun_for_eval(rand_data, 1)
sd_traj[i] = fun_for_eval(rand_data, 2)
}
#Plot
library(ggplot2)
plot1 <- qplot(x = samplesize_vec, y = mean_traj, geom = "line")
print(plot1)
plot2 <- qplot(x = samplesize_vec, y = sd_traj, geom = "line")
print(plot2)
source('C:/Users/Yuta/Dropbox/Problem_Set_1.R', echo=TRUE)
set.seed(1234)
for(i in 1:length(samplesize_vec)){
rand_data = rnorm(n = samplesize_vec[i], mean = 3, sd = 5)
mean_traj[i] = fun_for_eval(rand_data, "mean")
sd_traj[i] = fun_for_eval(rand_data, "sd")
}
#Plot
library(ggplot2)
plot1 <- qplot(x = samplesize_vec, y = mean_traj, geom = "line")
print(plot1)
plot2 <- qplot(x = samplesize_vec, y = sd_traj, geom = "line")
print(plot2)
