# Simple approach
result1 <- replicate(expr = mean(sample(x = pop, size = 10)), n = Nsamples)
result2 <- replicate(expr = mean(sample(x = pop, size = 100)), n = Nsamples)
result3 <- replicate(expr = mean(sample(x = pop, size = 500)), n = Nsamples)
# Create dataframe
result_data <- data.frame(  Ybar10 = result1,
Ybar100 = result2,
Ybar500 = result3)
install.packages("ggplot2")
install.packages("ggplot2")
rnorm(20)
install.packages("rmarkdown")
install.packages("tidyverse")
install.packages("reshape")
install.packages("bookdown")
class(CASchools)
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
library(AER)
# load the the data set in the workspace
data(CASchools)
install.packages("AER")
## # install the AER package (once)
## install.packages("AER")
##
## # load the AER package
library(AER)
# load the the data set in the workspace
data(CASchools)
CASchools
View(CASchools)
# Install package if you have not done so
install.packages( c("AER", "dplyr", "stargazer" ) )
install.packages(c("AER", "dplyr", "stargazer"))
# load packages
load(c("AER", "dplyr", "stargazer" ))
# Install package if you have not done so
# install.packages( c("AER", "dplyr", "stargazer" ) )
# load packages
load("AER")
# load packages
load("AER")
# load packages
load("AER")
# load packages
load("AER")
# Install package if you have not done so
# install.packages( c("AER", "dplyr", "stargazer" ) )
# load packages
library("AER")
library("dplyr")
library("dplyr")
library("stargazer")
install.packages("dplyr")
# Install package if you have not done so
install.packages("AER")
install.packages("AER")
install.packages("stargazer")
# Install package if you have not done so
# install.packages("AER")
# install.packages("dplyr")
# install.packages("stargazer")
# load packages
library("AER")
library("dplyr")
library("stargazer")
# Install package if you have not done so
# install.packages("AER")
# install.packages("dplyr")
# install.packages("stargazer")
# load packages
library("AER")
library("dplyr")
library("stargazer")
head(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
head(CASchools)
summary(CASchools)
summary(CASchools)
CASchools %>%
select(STR, score) %>%
summary()
# compute sample averages of STR and score
avg_STR <- mean(CASchools$STR)
avg_score <- mean(CASchools$score)
# compute sample standard deviations of STR and score
sd_STR <- sd(CASchools$STR)
sd_score <- sd(CASchools$score)
# set up a vector of percentiles and compute the quantiles
quantiles <- c(0.10, 0.25, 0.4, 0.5, 0.6, 0.75, 0.9)
quant_STR <- quantile(CASchools$STR, quantiles)
quant_score <- quantile(CASchools$score, quantiles)
# gather everything in a data.frame
DistributionSummary <- data.frame(Average = c(avg_STR, avg_score),
StandardDeviation = c(sd_STR, sd_score),
quantile = rbind(quant_STR, quant_score))
# print the summary to the console
DistributionSummary
stargazer(CASchools, type = "text")
stargazer(CASchools, type = "html")
stargazer(CASchools, type = "text")
CASchools %>%
stargazer( type = "text", summary.stat = c("n", "p75", "sd") )
plot(score ~ STR,
data = CASchools,
main = "Scatterplot of TestScore and STR",
xlab = "STR (X)",
ylab = "Test Score (Y)")
cor(CASchools$STR, CASchools$score)
# load the stargazer library
library(stargazer)
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
CASchools %>%
dplyr::rename( size = STR) -> CASchools
lm( score ~ size, data = CASchools)
model1_summary <- lm( score ~ size, data = CASchools)
# First, we rename the variable `STR`
CASchools %>%
dplyr::rename( size = STR) -> CASchools
CASchools
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
# First, we rename the variable `STR`
CASchools %>%
dplyr::rename( size = STR) -> CASchools
# Run regression and save results in the varaiable `model1_summary`
model1_summary <- lm( score ~ size, data = CASchools)
# See the results
summary(model1_summary)
summary(CASchools)
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(linear_model, type = "HC1")
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(model1_summary, type = "HC1")
vcov
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(model1_summary, type = "HC1")
# get standard error: the square root of the diagonal element in vcov
robust_se <- sqrt(diag(vcov))
robust_se
model1_summary$coefficients
summary(model1_summary)
model1_summary3
model1_summary
lmtest
?lmtest
# load `lmtest`
load(lmtest)
install.packages("lmtest")
install.packages("lmtest")
library("lmtest")
# load `lmtest`
library(lmtest)
# Combine robust standard errors
coeftest(model1_summary, vcov. = vcov)
stargazer(model1_summary, type ="text")
# load
library(stargazer)
stargazer::stargazer(model1_summary, type ="text")
stargazer::stargazer(model1_summary, type ="latex")
model1_summary
# Install package if you have not done so
# install.packages("AER")
# install.packages("dplyr")
# install.packages("stargazer")
# install.packages("lmtest")
# load packages
library("AER")
library("dplyr")
library("stargazer")
library("lmtest")
# load the the data set in the workspace
data(CASchools)
class(CASchools)
head(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
summary(CASchools)
CASchools %>%
select(STR, score) %>%
summary()
# compute sample averages of STR and score
avg_STR <- mean(CASchools$STR)
avg_score <- mean(CASchools$score)
# compute sample standard deviations of STR and score
sd_STR <- sd(CASchools$STR)
sd_score <- sd(CASchools$score)
# set up a vector of percentiles and compute the quantiles
quantiles <- c(0.10, 0.25, 0.4, 0.5, 0.6, 0.75, 0.9)
quant_STR <- quantile(CASchools$STR, quantiles)
quant_score <- quantile(CASchools$score, quantiles)
# gather everything in a data.frame
DistributionSummary <- data.frame(Average = c(avg_STR, avg_score),
StandardDeviation = c(sd_STR, sd_score),
quantile = rbind(quant_STR, quant_score))
# print the summary to the console
DistributionSummary
stargazer(CASchools, type = "text")
CASchools %>%
stargazer( type = "text", summary.stat = c("n", "p75", "sd") )
plot(score ~ STR,
data = CASchools,
main = "Scatterplot of TestScore and STR",
xlab = "STR (X)",
ylab = "Test Score (Y)")
cor(CASchools$STR, CASchools$score)
# First, we rename the variable `STR`
CASchools %>%
dplyr::rename( size = STR) -> CASchools
# Run regression and save results in the varaiable `model1_summary`
model1_summary <- lm( score ~ size, data = CASchools)
# See the results
summary(model1_summary)
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(model1_summary, type = "HC1")
# get standard error: the square root of the diagonal element in vcov
robust_se <- sqrt(diag(vcov))
robust_se
# load `lmtest`
library(lmtest)
# Combine robust standard errors
coeftest(model1_summary, vcov. = vcov)
# load
library(stargazer)
stargazer::stargazer(model1_summary, type ="text")
# Create output by stargazer
stargazer::stargazer(model1_summary, type ="text")
rob_se <- list( sqrt(diag(vcovHC(model1_summary, type = "HC1") ) ) )
stargazer( model1_summary,
se = rob_se)
stargazer( model1_summary,
se = rob_se,
type = "text")
# load the stargazer library
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
spec2 <- lm(score ~ size + english, data = CASchools)
spec3 <- lm(score ~ size + english + lunch, data = CASchools)
spec4 <- lm(score ~ size + english + calworks, data = CASchools)
spec5 <- lm(score ~ size + english + lunch + calworks, data = CASchools)
# gather robust standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(spec1, type = "HC1"))),
sqrt(diag(vcovHC(spec2, type = "HC1"))),
sqrt(diag(vcovHC(spec3, type = "HC1"))),
sqrt(diag(vcovHC(spec4, type = "HC1"))),
sqrt(diag(vcovHC(spec5, type = "HC1"))))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"),
type ="text")
# load the stargazer library
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
spec2 <- lm(score ~ size + english, data = CASchools)
spec3 <- lm(score ~ size + english + lunch, data = CASchools)
spec4 <- lm(score ~ size + english + calworks, data = CASchools)
spec5 <- lm(score ~ size + english + lunch + calworks, data = CASchools)
# gather robust standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(spec1, type = "HC1"))),
sqrt(diag(vcovHC(spec2, type = "HC1"))),
sqrt(diag(vcovHC(spec3, type = "HC1"))),
sqrt(diag(vcovHC(spec4, type = "HC1"))),
sqrt(diag(vcovHC(spec5, type = "HC1"))))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"),
type ="text",
keep.stat = c("N"))
Adjusted
help(stargazer)
# load the stargazer library
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
spec2 <- lm(score ~ size + english, data = CASchools)
spec3 <- lm(score ~ size + english + lunch, data = CASchools)
spec4 <- lm(score ~ size + english + calworks, data = CASchools)
spec5 <- lm(score ~ size + english + lunch + calworks, data = CASchools)
# gather robust standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(spec1, type = "HC1"))),
sqrt(diag(vcovHC(spec2, type = "HC1"))),
sqrt(diag(vcovHC(spec3, type = "HC1"))),
sqrt(diag(vcovHC(spec4, type = "HC1"))),
sqrt(diag(vcovHC(spec5, type = "HC1"))))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"),
type ="text",
keep.stat = c("N", "adj.rsq"))
# load packages
library("AER")
library("dplyr")
library("stargazer")
library("lmtest")
# load the the data set in the workspace
data(CASchools)
class(CASchools)
head(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
summary(CASchools)
CASchools %>%
select(STR, score) %>%
summary()
stargazer(CASchools, type = "text")
CASchools %>%
stargazer( type = "text", summary.stat = c("n", "p75", "sd") )
plot(score ~ STR,
data = CASchools,
main = "Scatterplot of TestScore and STR",
xlab = "STR (X)",
ylab = "Test Score (Y)")
cor(CASchools$STR, CASchools$score)
# First, we rename the variable `STR`
CASchools %>%
dplyr::rename( size = STR) -> CASchools
# Run regression and save results in the varaiable `model1_summary`
model1_summary <- lm( score ~ size, data = CASchools)
# See the results
summary(model1_summary)
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(model1_summary, type = "HC1")
# get standard error: the square root of the diagonal element in vcov
robust_se <- sqrt(diag(vcov))
robust_se
# load `lmtest`
library(lmtest)
# Combine robust standard errors
coeftest(model1_summary, vcov. = vcov)
# load
library(stargazer)
# Create output by stargazer
stargazer::stargazer(model1_summary, type ="text")
# Prepare robust standard errors in list
rob_se <- list( sqrt(diag(vcovHC(model1_summary, type = "HC1") ) ) )
# generate regression table.
stargazer( model1_summary,
se = rob_se,
type = "text")
# load the stargazer library
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
spec2 <- lm(score ~ size + english, data = CASchools)
spec3 <- lm(score ~ size + english + lunch, data = CASchools)
spec4 <- lm(score ~ size + english + calworks, data = CASchools)
spec5 <- lm(score ~ size + english + lunch + calworks, data = CASchools)
# gather robust standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(spec1, type = "HC1"))),
sqrt(diag(vcovHC(spec2, type = "HC1"))),
sqrt(diag(vcovHC(spec3, type = "HC1"))),
sqrt(diag(vcovHC(spec4, type = "HC1"))),
sqrt(diag(vcovHC(spec5, type = "HC1"))))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"),
type ="text",
keep.stat = c("N", "adj.rsq"))
library("AER")
library("dplyr")
library("stargazer")
library("lmtest")
data(CASchools)
# load the the data set in the workspace
data(CASchools)
class(CASchools)
head(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
CASchools
head(CASchools)
# load the the data set in the workspace
data(CASchools)
names(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 )
names(CASchools)
summary(CASchools)
CASchools %>%
mutate( STR = students / teachers ) %>%
mutate( score = (read + math) / 2 ) -> CASchools
summary(CASchools)
CASchools %>%
select(STR, score) %>%
summary()
stargazer(CASchools, type = "text")
CASchools %>%
stargazer( type = "text", summary.stat = c("n", "p75", "sd") )
plot(score ~ STR,
data = CASchools,
main = "Scatterplot of TestScore and STR",
xlab = "STR (X)",
ylab = "Test Score (Y)")
# First, we rename the variable `STR`
CASchools %>%
dplyr::rename( size = STR) -> CASchools
# Run regression and save results in the varaiable `model1_summary`
model1_summary <- lm( score ~ size, data = CASchools)
# See the results
summary(model1_summary)
# compute heteroskedasticity-robust standard errors
vcov <- vcovHC(model1_summary, type = "HC1")
# get standard error: the square root of the diagonal element in vcov
robust_se <- sqrt(diag(vcov))
robust_se
# load `lmtest`
library(lmtest)
# Combine robust standard errors
coeftest(model1_summary, vcov. = vcov)
# load
library(stargazer)
# Create output by stargazer
stargazer::stargazer(model1_summary, type ="text")
# Prepare robust standard errors in list
rob_se <- list( sqrt(diag(vcovHC(model1_summary, type = "HC1") ) ) )
# generate regression table.
stargazer( model1_summary,
se = rob_se,
type = "text")
# load the stargazer library
# estimate different model specifications
spec1 <- lm(score ~ size, data = CASchools)
spec2 <- lm(score ~ size + english, data = CASchools)
spec3 <- lm(score ~ size + english + lunch, data = CASchools)
spec4 <- lm(score ~ size + english + calworks, data = CASchools)
spec5 <- lm(score ~ size + english + lunch + calworks, data = CASchools)
# gather robust standard errors in a list
rob_se <- list(sqrt(diag(vcovHC(spec1, type = "HC1"))),
sqrt(diag(vcovHC(spec2, type = "HC1"))),
sqrt(diag(vcovHC(spec3, type = "HC1"))),
sqrt(diag(vcovHC(spec4, type = "HC1"))),
sqrt(diag(vcovHC(spec5, type = "HC1"))))
# generate a LaTeX table using stargazer
stargazer(spec1, spec2, spec3, spec4, spec5,
se = rob_se,
digits = 3,
header = F,
column.labels = c("(I)", "(II)", "(III)", "(IV)", "(V)"),
type ="text",
keep.stat = c("N", "adj.rsq"))
??mvrnorm
unlink('09_PS3_cache', recursive = TRUE)
hist_long1 <- hist_long1 + geom_density(binwidth = 0.01)
plot(hist_long1)
#######################
#Problem Set 3
#TA Shuhei Kaneko
#######################
#Problem 1
set.seed(77777)
library(MASS)
library(ggplot2)
#set parameters
beta_0 = 0
beta_1 = 2
beta_2 = 1
#DGP
N = 200
num_sim = 500
mu <- c(3,4)
sigma <- matrix(c(2,1,1,2), 2,2)
beta_1_long = numeric(length(num_sim))
beta_1_short = numeric(length(num_sim))
for (i in 1:500){
X <- mvrnorm(N, mu, sigma)
x_1 <- X[,1]
x_2 <- X[,2]
eps <- rnorm(N)
y = beta_0 + beta_1*x_1 + beta_2*x_2 + eps
data <- as.data.frame(cbind(y, x_1, x_2))
reg1 <- lm(y ~ x_1 + x_2, data = data)
beta_1_long[i] <- reg1$coefficients[2]
reg2 <- lm(y ~ x_1, data = data)
beta_1_short[i] <- reg2$coefficients[2]
}
beta_1_long <- as.data.frame(beta_1_long)
beta_1_short <- as.data.frame(beta_1_short)
hist_long1 <- ggplot(beta_1_long, aes(x = beta_1_long))
hist_long1 <- hist_long1 + geom_density(binwidth = 0.01)
plot(hist_long1)
hist_short1 <- ggplot(beta_1_short, aes(x = beta_1_short))
hist_short1 <- hist_short1 + geom_histogram(binwidth = 0.01)
plot(hist_short1)
plot(hist_long1)
hist_short1 <- hist_short1 + geom_density(binwidth = 0.01)
plot(hist_short1)
